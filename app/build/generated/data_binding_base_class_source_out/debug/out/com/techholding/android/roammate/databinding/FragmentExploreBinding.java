// Generated by view binder compiler. Do not edit!
package com.techholding.android.roammate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SearchView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.techholding.android.roammate.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentExploreBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView alternateLogin;

  @NonNull
  public final FloatingActionButton chatBtn;

  @NonNull
  public final RecyclerView generalRecyclerView;

  @NonNull
  public final TextView locality;

  @NonNull
  public final LinearLayout localityLayout;

  @NonNull
  public final ConstraintLayout nearByTitle;

  @NonNull
  public final SearchView searchBar;

  @NonNull
  public final TextView topPlaces;

  @NonNull
  public final RecyclerView topPlacesRecyclerView;

  @NonNull
  public final ConstraintLayout topPlacesTitle;

  private FragmentExploreBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView alternateLogin, @NonNull FloatingActionButton chatBtn,
      @NonNull RecyclerView generalRecyclerView, @NonNull TextView locality,
      @NonNull LinearLayout localityLayout, @NonNull ConstraintLayout nearByTitle,
      @NonNull SearchView searchBar, @NonNull TextView topPlaces,
      @NonNull RecyclerView topPlacesRecyclerView, @NonNull ConstraintLayout topPlacesTitle) {
    this.rootView = rootView;
    this.alternateLogin = alternateLogin;
    this.chatBtn = chatBtn;
    this.generalRecyclerView = generalRecyclerView;
    this.locality = locality;
    this.localityLayout = localityLayout;
    this.nearByTitle = nearByTitle;
    this.searchBar = searchBar;
    this.topPlaces = topPlaces;
    this.topPlacesRecyclerView = topPlacesRecyclerView;
    this.topPlacesTitle = topPlacesTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentExploreBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentExploreBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_explore, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentExploreBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.alternateLogin;
      TextView alternateLogin = ViewBindings.findChildViewById(rootView, id);
      if (alternateLogin == null) {
        break missingId;
      }

      id = R.id.chatBtn;
      FloatingActionButton chatBtn = ViewBindings.findChildViewById(rootView, id);
      if (chatBtn == null) {
        break missingId;
      }

      id = R.id.general_recycler_view;
      RecyclerView generalRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (generalRecyclerView == null) {
        break missingId;
      }

      id = R.id.locality;
      TextView locality = ViewBindings.findChildViewById(rootView, id);
      if (locality == null) {
        break missingId;
      }

      id = R.id.localityLayout;
      LinearLayout localityLayout = ViewBindings.findChildViewById(rootView, id);
      if (localityLayout == null) {
        break missingId;
      }

      id = R.id.nearByTitle;
      ConstraintLayout nearByTitle = ViewBindings.findChildViewById(rootView, id);
      if (nearByTitle == null) {
        break missingId;
      }

      id = R.id.search_bar;
      SearchView searchBar = ViewBindings.findChildViewById(rootView, id);
      if (searchBar == null) {
        break missingId;
      }

      id = R.id.topPlaces;
      TextView topPlaces = ViewBindings.findChildViewById(rootView, id);
      if (topPlaces == null) {
        break missingId;
      }

      id = R.id.topPlacesRecyclerView;
      RecyclerView topPlacesRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (topPlacesRecyclerView == null) {
        break missingId;
      }

      id = R.id.topPlacesTitle;
      ConstraintLayout topPlacesTitle = ViewBindings.findChildViewById(rootView, id);
      if (topPlacesTitle == null) {
        break missingId;
      }

      return new FragmentExploreBinding((ConstraintLayout) rootView, alternateLogin, chatBtn,
          generalRecyclerView, locality, localityLayout, nearByTitle, searchBar, topPlaces,
          topPlacesRecyclerView, topPlacesTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
